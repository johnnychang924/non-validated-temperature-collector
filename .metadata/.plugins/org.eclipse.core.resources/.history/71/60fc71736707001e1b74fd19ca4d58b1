#include <msp430.h>

#define CALADC_15V_30C  *((unsigned int *)0x1A1A)                 // Temperature Sensor Calibration-30 C
                                                                  // See device datasheet for TLV table memory mapping
#define CALADC_15V_85C  *((unsigned int *)0x1A1C)                 // Temperature Sensor Calibration-85 C

float temp;
float IntDegF;
float IntDegC;
void setup()
{
  // put your setup code here, to run once:
   Serial.begin(9600) ;
   Serial.println(12);
   //   WDTCTL = WDTPW | WDTHOLD;                                     // Stop WDT

    PM5CTL0 &= ~LOCKLPM5;                                         // Disable high-impedance mode

    TA0CCTL0 |= CCIE;                                             // TACCR0 interrupt enabled
    TA0CCR0 = 65535;
    TA0CTL = TASSEL__ACLK | MC__UP;                               // ACLK, UP mode

    // Configure ADC - Pulse sample mode; ADCSC trigger
    ADCCTL0 |= ADCSHT_8 | ADCON;                                  // ADC ON,temperature sample period>30us
    ADCCTL1 |= ADCSHP;                                            // s/w trig, single ch/conv, MODOSC
    ADCCTL2 |= ADCRES;                                            // 10-bit conversion results
    ADCMCTL0 |= ADCSREF_1 | ADCINCH_12;                           // ADC input ch A12 => temp sense
    ADCIE |=ADCIE0;                                               // Enable the Interrupt request for a completed ADC_B conversion

    // Configure reference
    PMMCTL0_H = PMMPW_H;                                          // Unlock the PMM registers
    PMMCTL2 |= INTREFEN | TSENSOREN;                              // Enable internal reference and temperature sensor

    __delay_cycles(400);                                          // Delay for reference settling

  //  __bis_SR_register(LPM0_bits | GIE);                           // LPM3 with interrupts enabled
 //   __no_operation();                                             // Only for debugger
}

void loop()
{

  Serial.println(IntDegC);
  delay(500);
}

// ADC interrupt service routine
#pragma vector=ADC_VECTOR
__interrupt void ADC_ISR(void)
{
     //  __delay_cycles(400);
            temp = ADCMEM0;
            // Temperature in Celsius
            IntDegC = (temp-CALADC_15V_30C)*(85-30)/(CALADC_15V_85C-CALADC_15V_30C)+30;

            // Temperature in Fahrenheit
            IntDegF = 9*IntDegC/5+32;

}

// Timer A0 interrupt service routine

#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer_A (void)
{
    ADCCTL0 |= ADCENC | ADCSC;                                    // Sampling and conversion start
}
